# Create required networks and ports
- name: Create the required networks
  hosts: localhost
  gather_facts: no
  tasks:
    - name: create the net network
      openstack.cloud.network:
        #project: ruku-project
        state: present
        name: net
        external: false
    - name: create the subnet for net network 
      openstack.cloud.subnet:
        state: present
        network_name: net
        name: net-subnet
        cidr: 10.2.2.0/24

    - name: create the int-net network
      openstack.cloud.network:
        #project: ruku-project
        state: present
        name: int-net
        external: false
    - name: create the subnet for int-net network 
      openstack.cloud.subnet:
        state: present
        network_name: int-net
        name: int-net-subnet
        cidr: 192.168.2.0/24
        
    - name: create the management network 
      openstack.cloud.network:
        #project: ruku-project
        state: present
        name: mgmt
        external: false
    - name: create the subnet for management network
      openstack.cloud.subnet:
        state: present
        network_name: mgmt
        name: mgmt-subnet
        cidr: 10.2.0.0/24

# Create router with two internal subnet interface
    - name: Create router for external connectivity
      openstack.cloud.router:
        #cloud: mycloud
        state: present
        name: router1
        network: ext-net
        interfaces:
          - mgmt-subnet
          - net-subnet

# Create a Virtual IP
    - name: Create Virtual IP for VRRP
      openstack.cloud.port:
        state: present
        auth:
          auth_url: http://sdncloud91cn.netcracker.com:5000/v3/
          username: ruku
          password: wiiVee5rei
          project_name: ruku-project
        name: Virtual-IP
        network: net
        fixed_ips:
          - ip_address: 10.2.2.7  

    - name: Create interface on NET network for LB1 server
      openstack.cloud.port:      
        name: LB1-net-port
        state: present
        network: net
        fixed_ips:
          - ip_address: 10.2.2.8
        allowed_address_pairs: 
          - ip_address: 10.2.2.7 

    - name: Create interface on NET network for LB2 server
      openstack.cloud.port:      
        name: LB2-net-port
        state: present
        network: net
        fixed_ips:
          - ip_address: 10.2.2.9
        allowed_address_pairs: 
          - ip_address: 10.2.2.7
    
    - name: Create interface on int-net network for backend-1 web server
      openstack.cloud.port:      
        name: int-net-port1
        state: present
        network: int-net
        fixed_ips:
          - ip_address: 192.168.2.8
  
    - name: Create interface on int-net network for backend-2 web server
      openstack.cloud.port:      
        name: int-net-port2
        state: present
        network: int-net
        fixed_ips:
          - ip_address: 192.168.2.9

# Create web server instances for Apache2
    - name: Launch first web server instance
      openstack.cloud.server:
        state: present
        auth:
          auth_url: http://sdncloud91cn.netcracker.com:5000/v3/
          username: ruku
          password: wiiVee5rei
          project_name: ruku-project
        name: backend-1
        #region_name: region-b.geo-1
        availability_zone: nova-1
        image: ubuntu_18.04_w_root
        flavor: m1.medium
        #network: int-net
        nics: 
          - net-name: mgmt
          - port-name: int-net-port1
        key_name: backend-1
        timeout: 200
        security_groups: default
        auto_floating_ip: false
        #floating_ips:
        #  - 10.101.205.138
        userdata: |
          {%- raw -%}#!/bin/bash
          # Bring up the second interface
          sudo bash -c 'echo "        ens4:
                     dhcp4: no
                     addresses: [192.168.2.8/24]" >> /etc/netplan/50-cloud-init.yaml'
          sudo netplan apply
          # Update repo list
          sudo touch /etc/apt/sources.list.d/nc_bionic.list
          sudo bash -c "echo 'deb http://yumsrv03cn.netcracker.com/deb/ubuntu/ bionic main restricted
          deb http://yumsrv03cn.netcracker.com/deb/ubuntu/ bionic-updates main restricted
          deb http://yumsrv03cn.netcracker.com/deb/ubuntu/ bionic universe
          deb http://yumsrv03cn.netcracker.com/deb/ubuntu/ bionic-updates universe
          deb http://yumsrv03cn.netcracker.com/deb/ubuntu/ bionic multiverse
          deb http://yumsrv03cn.netcracker.com/deb/ubuntu/ bionic-updates multiverse
          deb http://yumsrv03cn.netcracker.com/deb/ubuntu/ bionic-backports main restricted universe multiverse' >> /etc/apt/sources.list.d/nc_bionic.list"
          sudo apt update -y
          # Install and update apache2
          sudo apt install apache2 -y && sudo systemctl enable apache2
          #sudo touch /var/www/html/index.html
          sudo bash -c 'echo "<!DOCTYPE html>
          <html lang="en">
            <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <meta http-equiv="X-UA-Compatible" content="ie=edge">
              <title>Apache webserver node-1</title>
              <link rel="stylesheet" href="./style.css">
              <link rel="icon" href="./favicon.ico" type="image/x-icon">
              <style>
                h1 {
                text-align: center;
                }

                h2 {
                text-align: center;
                }

                h3 {
                text-align: center;
                }
              </style>
            </head>
            <body>
              <main>
                  <h1 style="color:#515A5A">Apache2 web server node-1</h1>
              <h2 style="color:#E74C3C">Hello from backend-1 web server !!!</h2>
              <h3 style="color:#E74C3C">Hello from backend-1 web server !!!</h3>
              </main>
                  <script src="index.js"></script>
            </body>
          </html>" > /var/www/html/index.html'
          sudo systemctl restart apache2      
          {% endraw %}

    - name: Launch second web server instance
      openstack.cloud.server:
        state: present
        auth:
          auth_url: http://sdncloud91cn.netcracker.com:5000/v3/
          username: ruku
          password: wiiVee5rei
          project_name: ruku-project
        name: backend-2
        #region_name: region-b.geo-1
        availability_zone: nova-2
        image: ubuntu_18.04_w_root
        flavor: m1.medium
        #network: int-net
        nics: 
          - net-name: mgmt
          - port-name: int-net-port2
        key_name: backend-1
        timeout: 200
        security_groups: default
        auto_floating_ip: false
        userdata: |
          {%- raw -%}#!/bin/bash
          # Bring up the second interface
          sudo bash -c 'echo "        ens4:
                     dhcp4: no
                     addresses: [192.168.2.9/24]" >> /etc/netplan/50-cloud-init.yaml'
          sudo netplan apply
          # Update repo list
          sudo touch /etc/apt/sources.list.d/nc_bionic.list
          sudo bash -c "echo 'deb http://yumsrv03cn.netcracker.com/deb/ubuntu/ bionic main restricted
          deb http://yumsrv03cn.netcracker.com/deb/ubuntu/ bionic-updates main restricted
          deb http://yumsrv03cn.netcracker.com/deb/ubuntu/ bionic universe
          deb http://yumsrv03cn.netcracker.com/deb/ubuntu/ bionic-updates universe
          deb http://yumsrv03cn.netcracker.com/deb/ubuntu/ bionic multiverse
          deb http://yumsrv03cn.netcracker.com/deb/ubuntu/ bionic-updates multiverse
          deb http://yumsrv03cn.netcracker.com/deb/ubuntu/ bionic-backports main restricted universe multiverse' >> /etc/apt/sources.list.d/nc_bionic.list"
          sudo apt update -y
          # Install and update apache2
          sudo apt install apache2 -y && sudo systemctl enable apache2
          #sudo touch /var/www/html/index.html
          sudo bash -c 'echo "<!DOCTYPE html>
          <html lang="en">
            <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <meta http-equiv="X-UA-Compatible" content="ie=edge">
              <title>Apache webserver node-1</title>
              <link rel="stylesheet" href="./style.css">
              <link rel="icon" href="./favicon.ico" type="image/x-icon">
              <style>
                h1 {
                text-align: center;
                }

                h2 {
                text-align: center;
                }

                h3 {
                text-align: center;
                }
              </style>
            </head>
            <body>
              <main>
                  <h1 style="color:#515A5A">Apache2 web server node-1</h1>
              <h2 style="color:#27AE60">Hello from backend-2 web server !!!</h2>
              <h3 style="color:#27AE60">Hello from backend-2 web server !!!</h3>
              </main>
                  <script src="index.js"></script>
            </body>
          </html>" > /var/www/html/index.html'
          sudo systemctl restart apache2      
          {% endraw %}

# Launch compute instance for load balancing servers
    - name: Launch first load balancer instance
      openstack.cloud.server:
        state: present
        auth:
          auth_url: http://sdncloud91cn.netcracker.com:5000/v3/
          username: ruku
          password: wiiVee5rei
          project_name: ruku-project
        name: loadbalancer-1
        #region_name: region-b.geo-1
        availability_zone: nova-1
        image: ubuntu_18.04_w_root
        flavor: m1.medium
        nics: 
          - port-name: LB1-net-port
          - net-name: int-net
        key_name: backend-1
        timeout: 200
        security_groups: default
        auto_floating_ip: false
        #floating_ips:
        #  - 10.101.205.124
        userdata: |
          {%- raw -%}#!/bin/bash
          # Bring up the second interface
          sudo bash -c 'echo "        ens4:
                     dhcp4: yes
                     dhcp4-overrides:
                       use-routes: false" >> /etc/netplan/50-cloud-init.yaml'
          sudo netplan apply
          # Update repo list
          sudo touch /etc/apt/sources.list.d/nc_bionic.list
          sudo bash -c "echo 'deb http://yumsrv03cn.netcracker.com/deb/ubuntu/ bionic main restricted
          deb http://yumsrv03cn.netcracker.com/deb/ubuntu/ bionic-updates main restricted
          deb http://yumsrv03cn.netcracker.com/deb/ubuntu/ bionic universe
          deb http://yumsrv03cn.netcracker.com/deb/ubuntu/ bionic-updates universe
          deb http://yumsrv03cn.netcracker.com/deb/ubuntu/ bionic multiverse
          deb http://yumsrv03cn.netcracker.com/deb/ubuntu/ bionic-updates multiverse
          deb http://yumsrv03cn.netcracker.com/deb/ubuntu/ bionic-backports main restricted universe multiverse' >> /etc/apt/sources.list.d/nc_bionic.list"
          sudo apt update -y
          # Install keepalived and haproxy
          sudo apt install keepalived haproxy -y && sudo systemctl enable keepalived haproxy

          sudo bash -c 'echo "frontend haproxy-main
              bind *:80
              option forwardfor
              default_backend apache_webservers

          backend apache_webservers
              balance roundrobin
              server websvr1      192.168.2.8:80 check
              server websvr2      192.168.2.9:80 check"' > /etc/haproxy/haproxy.cfg
          sudo systemctl restart haproxy

          # Copy the configuration file for keepalived
          sudo bash -c 'echo "vrrp_instance vrrp_group_1 {
            state BACKUP
            interface ens3
            virtual_router_id 1
            priority 100
            authentication {
                auth_type PASS
                auth_pass password
            }
            virtual_ipaddress {
                10.2.2.7/24 brd 10.2.2.255 dev ens3
            }
          }"' > /etc/keepalived/keepalived.conf

          sudo systemctl restart keepalived
          sleep 30
          {% endraw %}

    - name: Launch second load balancer instance
      openstack.cloud.server:
        state: present
        auth:
          auth_url: http://sdncloud91cn.netcracker.com:5000/v3/
          username: ruku
          password: wiiVee5rei
          project_name: ruku-project
        name: loadbalancer-2
        #region_name: region-b.geo-1
        availability_zone: nova-2
        image: ubuntu_18.04_w_root
        flavor: m1.medium
        nics: 
          - port-name: LB2-net-port
          - net-name: int-net
        key_name: backend-1
        timeout: 200
        security_groups: default
        auto_floating_ip: false
        userdata: |
          {%- raw -%}#!/bin/bash
          # Bring up the second interface
          sudo bash -c 'echo "        ens4:
                     dhcp4: yes
                     dhcp4-overrides:
                       use-routes: false" >> /etc/netplan/50-cloud-init.yaml'
          sudo netplan apply
          # Update repo list
          sudo touch /etc/apt/sources.list.d/nc_bionic.list
          sudo bash -c "echo 'deb http://yumsrv03cn.netcracker.com/deb/ubuntu/ bionic main restricted
          deb http://yumsrv03cn.netcracker.com/deb/ubuntu/ bionic-updates main restricted
          deb http://yumsrv03cn.netcracker.com/deb/ubuntu/ bionic universe
          deb http://yumsrv03cn.netcracker.com/deb/ubuntu/ bionic-updates universe
          deb http://yumsrv03cn.netcracker.com/deb/ubuntu/ bionic multiverse
          deb http://yumsrv03cn.netcracker.com/deb/ubuntu/ bionic-updates multiverse
          deb http://yumsrv03cn.netcracker.com/deb/ubuntu/ bionic-backports main restricted universe multiverse' >> /etc/apt/sources.list.d/nc_bionic.list"
          sudo apt update -y
          # Install keepalived and haproxy
          sudo apt install keepalived haproxy -y && sudo systemctl enable keepalived haproxy
          sudo bash -c 'echo "frontend haproxy-main
              bind *:80
              option forwardfor
              default_backend apache_webservers

          backend apache_webservers
              balance roundrobin
              server websvr1      192.168.2.8:80 check
              server websvr2      192.168.2.9:80 check"' > /etc/haproxy/haproxy.cfg
          sudo systemctl restart haproxy
          # Copy the configuration file for keepalived
          sudo bash -c 'echo "vrrp_instance vrrp_group_1 {
            state BACKUP
            interface ens3
            virtual_router_id 1
            priority 100
            authentication {
                auth_type PASS
                auth_pass password
            }
            virtual_ipaddress {
                10.2.2.7/24 brd 10.2.2.255 dev ens3
            }
          }"' > /etc/keepalived/keepalived.conf
          sudo systemctl restart keepalived
          sleep 30
          {% endraw %}
    
    - name: Attach Virtual IP with Floating IP
      shell:
          'openstack floating ip create --port Virtual-IP ext-net'

    - name: Extract the Floating IP
      shell:
          'openstack floating ip list -f csv -c "Floating IP Address"| grep "[0-9]"'
      register: Floating
    - debug: msg='The Apache2 web server is available at {{ Floating.stdout }}'